/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PrivateImport } from './routes/_private'
import { Route as MainImport } from './routes/_main'
import { Route as AuthImport } from './routes/_auth'
import { Route as PrivateMacroMacroCreateImport } from './routes/_private/macro/macro.create'
import { Route as PrivateMacroMacroIdImport } from './routes/_private/macro/macro.$id'
import { Route as PrivateGoalGoalCreateImport } from './routes/_private/goal/goal.create'
import { Route as PrivateGoalGoalIdImport } from './routes/_private/goal/goal.$id'

// Create Virtual Routes

const MainIndexLazyImport = createFileRoute('/_main/')()
const PrivateTransactionLazyImport = createFileRoute('/_private/transaction')()
const PrivateSettingLazyImport = createFileRoute('/_private/setting')()
const PrivateReportLazyImport = createFileRoute('/_private/report')()
const PrivateDashboardLazyImport = createFileRoute('/_private/dashboard')()
const AuthRegisterLazyImport = createFileRoute('/_auth/register')()
const AuthLoginLazyImport = createFileRoute('/_auth/login')()
const PrivateMacroIndexLazyImport = createFileRoute('/_private/macro/')()
const PrivateGoalIndexLazyImport = createFileRoute('/_private/goal/')()

// Create/Update Routes

const PrivateRoute = PrivateImport.update({
  id: '/_private',
  getParentRoute: () => rootRoute,
} as any)

const MainRoute = MainImport.update({
  id: '/_main',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const MainIndexLazyRoute = MainIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainRoute,
} as any).lazy(() => import('./routes/_main/index.lazy').then((d) => d.Route))

const PrivateTransactionLazyRoute = PrivateTransactionLazyImport.update({
  id: '/transaction',
  path: '/transaction',
  getParentRoute: () => PrivateRoute,
} as any).lazy(() =>
  import('./routes/_private/transaction.lazy').then((d) => d.Route),
)

const PrivateSettingLazyRoute = PrivateSettingLazyImport.update({
  id: '/setting',
  path: '/setting',
  getParentRoute: () => PrivateRoute,
} as any).lazy(() =>
  import('./routes/_private/setting.lazy').then((d) => d.Route),
)

const PrivateReportLazyRoute = PrivateReportLazyImport.update({
  id: '/report',
  path: '/report',
  getParentRoute: () => PrivateRoute,
} as any).lazy(() =>
  import('./routes/_private/report.lazy').then((d) => d.Route),
)

const PrivateDashboardLazyRoute = PrivateDashboardLazyImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => PrivateRoute,
} as any).lazy(() =>
  import('./routes/_private/dashboard.lazy').then((d) => d.Route),
)

const AuthRegisterLazyRoute = AuthRegisterLazyImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/register.lazy').then((d) => d.Route),
)

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/login.lazy').then((d) => d.Route))

const PrivateMacroIndexLazyRoute = PrivateMacroIndexLazyImport.update({
  id: '/macro/',
  path: '/macro/',
  getParentRoute: () => PrivateRoute,
} as any).lazy(() =>
  import('./routes/_private/macro/index.lazy').then((d) => d.Route),
)

const PrivateGoalIndexLazyRoute = PrivateGoalIndexLazyImport.update({
  id: '/goal/',
  path: '/goal/',
  getParentRoute: () => PrivateRoute,
} as any).lazy(() =>
  import('./routes/_private/goal/index.lazy').then((d) => d.Route),
)

const PrivateMacroMacroCreateRoute = PrivateMacroMacroCreateImport.update({
  id: '/macro/macro/create',
  path: '/macro/macro/create',
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateMacroMacroIdRoute = PrivateMacroMacroIdImport.update({
  id: '/macro/macro/$id',
  path: '/macro/macro/$id',
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateGoalGoalCreateRoute = PrivateGoalGoalCreateImport.update({
  id: '/goal/goal/create',
  path: '/goal/goal/create',
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateGoalGoalIdRoute = PrivateGoalGoalIdImport.update({
  id: '/goal/goal/$id',
  path: '/goal/goal/$id',
  getParentRoute: () => PrivateRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainImport
      parentRoute: typeof rootRoute
    }
    '/_private': {
      id: '/_private'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterLazyImport
      parentRoute: typeof AuthImport
    }
    '/_private/dashboard': {
      id: '/_private/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof PrivateDashboardLazyImport
      parentRoute: typeof PrivateImport
    }
    '/_private/report': {
      id: '/_private/report'
      path: '/report'
      fullPath: '/report'
      preLoaderRoute: typeof PrivateReportLazyImport
      parentRoute: typeof PrivateImport
    }
    '/_private/setting': {
      id: '/_private/setting'
      path: '/setting'
      fullPath: '/setting'
      preLoaderRoute: typeof PrivateSettingLazyImport
      parentRoute: typeof PrivateImport
    }
    '/_private/transaction': {
      id: '/_private/transaction'
      path: '/transaction'
      fullPath: '/transaction'
      preLoaderRoute: typeof PrivateTransactionLazyImport
      parentRoute: typeof PrivateImport
    }
    '/_main/': {
      id: '/_main/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainIndexLazyImport
      parentRoute: typeof MainImport
    }
    '/_private/goal/': {
      id: '/_private/goal/'
      path: '/goal'
      fullPath: '/goal'
      preLoaderRoute: typeof PrivateGoalIndexLazyImport
      parentRoute: typeof PrivateImport
    }
    '/_private/macro/': {
      id: '/_private/macro/'
      path: '/macro'
      fullPath: '/macro'
      preLoaderRoute: typeof PrivateMacroIndexLazyImport
      parentRoute: typeof PrivateImport
    }
    '/_private/goal/goal/$id': {
      id: '/_private/goal/goal/$id'
      path: '/goal/goal/$id'
      fullPath: '/goal/goal/$id'
      preLoaderRoute: typeof PrivateGoalGoalIdImport
      parentRoute: typeof PrivateImport
    }
    '/_private/goal/goal/create': {
      id: '/_private/goal/goal/create'
      path: '/goal/goal/create'
      fullPath: '/goal/goal/create'
      preLoaderRoute: typeof PrivateGoalGoalCreateImport
      parentRoute: typeof PrivateImport
    }
    '/_private/macro/macro/$id': {
      id: '/_private/macro/macro/$id'
      path: '/macro/macro/$id'
      fullPath: '/macro/macro/$id'
      preLoaderRoute: typeof PrivateMacroMacroIdImport
      parentRoute: typeof PrivateImport
    }
    '/_private/macro/macro/create': {
      id: '/_private/macro/macro/create'
      path: '/macro/macro/create'
      fullPath: '/macro/macro/create'
      preLoaderRoute: typeof PrivateMacroMacroCreateImport
      parentRoute: typeof PrivateImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthLoginLazyRoute: typeof AuthLoginLazyRoute
  AuthRegisterLazyRoute: typeof AuthRegisterLazyRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginLazyRoute: AuthLoginLazyRoute,
  AuthRegisterLazyRoute: AuthRegisterLazyRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface MainRouteChildren {
  MainIndexLazyRoute: typeof MainIndexLazyRoute
}

const MainRouteChildren: MainRouteChildren = {
  MainIndexLazyRoute: MainIndexLazyRoute,
}

const MainRouteWithChildren = MainRoute._addFileChildren(MainRouteChildren)

interface PrivateRouteChildren {
  PrivateDashboardLazyRoute: typeof PrivateDashboardLazyRoute
  PrivateReportLazyRoute: typeof PrivateReportLazyRoute
  PrivateSettingLazyRoute: typeof PrivateSettingLazyRoute
  PrivateTransactionLazyRoute: typeof PrivateTransactionLazyRoute
  PrivateGoalIndexLazyRoute: typeof PrivateGoalIndexLazyRoute
  PrivateMacroIndexLazyRoute: typeof PrivateMacroIndexLazyRoute
  PrivateGoalGoalIdRoute: typeof PrivateGoalGoalIdRoute
  PrivateGoalGoalCreateRoute: typeof PrivateGoalGoalCreateRoute
  PrivateMacroMacroIdRoute: typeof PrivateMacroMacroIdRoute
  PrivateMacroMacroCreateRoute: typeof PrivateMacroMacroCreateRoute
}

const PrivateRouteChildren: PrivateRouteChildren = {
  PrivateDashboardLazyRoute: PrivateDashboardLazyRoute,
  PrivateReportLazyRoute: PrivateReportLazyRoute,
  PrivateSettingLazyRoute: PrivateSettingLazyRoute,
  PrivateTransactionLazyRoute: PrivateTransactionLazyRoute,
  PrivateGoalIndexLazyRoute: PrivateGoalIndexLazyRoute,
  PrivateMacroIndexLazyRoute: PrivateMacroIndexLazyRoute,
  PrivateGoalGoalIdRoute: PrivateGoalGoalIdRoute,
  PrivateGoalGoalCreateRoute: PrivateGoalGoalCreateRoute,
  PrivateMacroMacroIdRoute: PrivateMacroMacroIdRoute,
  PrivateMacroMacroCreateRoute: PrivateMacroMacroCreateRoute,
}

const PrivateRouteWithChildren =
  PrivateRoute._addFileChildren(PrivateRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof PrivateRouteWithChildren
  '/login': typeof AuthLoginLazyRoute
  '/register': typeof AuthRegisterLazyRoute
  '/dashboard': typeof PrivateDashboardLazyRoute
  '/report': typeof PrivateReportLazyRoute
  '/setting': typeof PrivateSettingLazyRoute
  '/transaction': typeof PrivateTransactionLazyRoute
  '/': typeof MainIndexLazyRoute
  '/goal': typeof PrivateGoalIndexLazyRoute
  '/macro': typeof PrivateMacroIndexLazyRoute
  '/goal/goal/$id': typeof PrivateGoalGoalIdRoute
  '/goal/goal/create': typeof PrivateGoalGoalCreateRoute
  '/macro/macro/$id': typeof PrivateMacroMacroIdRoute
  '/macro/macro/create': typeof PrivateMacroMacroCreateRoute
}

export interface FileRoutesByTo {
  '': typeof PrivateRouteWithChildren
  '/login': typeof AuthLoginLazyRoute
  '/register': typeof AuthRegisterLazyRoute
  '/dashboard': typeof PrivateDashboardLazyRoute
  '/report': typeof PrivateReportLazyRoute
  '/setting': typeof PrivateSettingLazyRoute
  '/transaction': typeof PrivateTransactionLazyRoute
  '/': typeof MainIndexLazyRoute
  '/goal': typeof PrivateGoalIndexLazyRoute
  '/macro': typeof PrivateMacroIndexLazyRoute
  '/goal/goal/$id': typeof PrivateGoalGoalIdRoute
  '/goal/goal/create': typeof PrivateGoalGoalCreateRoute
  '/macro/macro/$id': typeof PrivateMacroMacroIdRoute
  '/macro/macro/create': typeof PrivateMacroMacroCreateRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_main': typeof MainRouteWithChildren
  '/_private': typeof PrivateRouteWithChildren
  '/_auth/login': typeof AuthLoginLazyRoute
  '/_auth/register': typeof AuthRegisterLazyRoute
  '/_private/dashboard': typeof PrivateDashboardLazyRoute
  '/_private/report': typeof PrivateReportLazyRoute
  '/_private/setting': typeof PrivateSettingLazyRoute
  '/_private/transaction': typeof PrivateTransactionLazyRoute
  '/_main/': typeof MainIndexLazyRoute
  '/_private/goal/': typeof PrivateGoalIndexLazyRoute
  '/_private/macro/': typeof PrivateMacroIndexLazyRoute
  '/_private/goal/goal/$id': typeof PrivateGoalGoalIdRoute
  '/_private/goal/goal/create': typeof PrivateGoalGoalCreateRoute
  '/_private/macro/macro/$id': typeof PrivateMacroMacroIdRoute
  '/_private/macro/macro/create': typeof PrivateMacroMacroCreateRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/register'
    | '/dashboard'
    | '/report'
    | '/setting'
    | '/transaction'
    | '/'
    | '/goal'
    | '/macro'
    | '/goal/goal/$id'
    | '/goal/goal/create'
    | '/macro/macro/$id'
    | '/macro/macro/create'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/login'
    | '/register'
    | '/dashboard'
    | '/report'
    | '/setting'
    | '/transaction'
    | '/'
    | '/goal'
    | '/macro'
    | '/goal/goal/$id'
    | '/goal/goal/create'
    | '/macro/macro/$id'
    | '/macro/macro/create'
  id:
    | '__root__'
    | '/_auth'
    | '/_main'
    | '/_private'
    | '/_auth/login'
    | '/_auth/register'
    | '/_private/dashboard'
    | '/_private/report'
    | '/_private/setting'
    | '/_private/transaction'
    | '/_main/'
    | '/_private/goal/'
    | '/_private/macro/'
    | '/_private/goal/goal/$id'
    | '/_private/goal/goal/create'
    | '/_private/macro/macro/$id'
    | '/_private/macro/macro/create'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  MainRoute: typeof MainRouteWithChildren
  PrivateRoute: typeof PrivateRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  MainRoute: MainRouteWithChildren,
  PrivateRoute: PrivateRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_main",
        "/_private"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login",
        "/_auth/register"
      ]
    },
    "/_main": {
      "filePath": "_main.tsx",
      "children": [
        "/_main/"
      ]
    },
    "/_private": {
      "filePath": "_private.tsx",
      "children": [
        "/_private/dashboard",
        "/_private/report",
        "/_private/setting",
        "/_private/transaction",
        "/_private/goal/",
        "/_private/macro/",
        "/_private/goal/goal/$id",
        "/_private/goal/goal/create",
        "/_private/macro/macro/$id",
        "/_private/macro/macro/create"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth/login.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/register": {
      "filePath": "_auth/register.lazy.tsx",
      "parent": "/_auth"
    },
    "/_private/dashboard": {
      "filePath": "_private/dashboard.lazy.tsx",
      "parent": "/_private"
    },
    "/_private/report": {
      "filePath": "_private/report.lazy.tsx",
      "parent": "/_private"
    },
    "/_private/setting": {
      "filePath": "_private/setting.lazy.tsx",
      "parent": "/_private"
    },
    "/_private/transaction": {
      "filePath": "_private/transaction.lazy.tsx",
      "parent": "/_private"
    },
    "/_main/": {
      "filePath": "_main/index.lazy.tsx",
      "parent": "/_main"
    },
    "/_private/goal/": {
      "filePath": "_private/goal/index.lazy.tsx",
      "parent": "/_private"
    },
    "/_private/macro/": {
      "filePath": "_private/macro/index.lazy.tsx",
      "parent": "/_private"
    },
    "/_private/goal/goal/$id": {
      "filePath": "_private/goal/goal.$id.tsx",
      "parent": "/_private"
    },
    "/_private/goal/goal/create": {
      "filePath": "_private/goal/goal.create.tsx",
      "parent": "/_private"
    },
    "/_private/macro/macro/$id": {
      "filePath": "_private/macro/macro.$id.tsx",
      "parent": "/_private"
    },
    "/_private/macro/macro/create": {
      "filePath": "_private/macro/macro.create.tsx",
      "parent": "/_private"
    }
  }
}
ROUTE_MANIFEST_END */
